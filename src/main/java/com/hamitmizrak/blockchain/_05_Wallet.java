package com.hamitmizrak.blockchain;


// ============================================
// ğŸ”§ _05_Wallet.java (AÃ§Ä±klamalÄ±)
// ============================================

import lombok.Builder;
import lombok.Getter;
import lombok.Setter;

import java.util.HashMap;
import java.util.Map;

// LOMBOK
@Getter
@Setter

/**
 * Wallet sÄ±nÄ±fÄ±, kullanÄ±cÄ± cÃ¼zdanlarÄ±nÄ± ve bakiyeleri yÃ¶netmek iÃ§in kullanÄ±lÄ±r.
 * Her kullanÄ±cÄ±ya baÅŸlangÄ±Ã§ bakiyesi atanabilir ve transfer iÅŸlemleri yapÄ±labilir.
 */
public class _05_Wallet {

    // KullanÄ±cÄ± adÄ±nÄ± (veya ID'sini) bakiye ile eÅŸleyen map
    private static Map<String, Double> balances = new HashMap<>();


    /**
     * Yeni bir kullanÄ±cÄ± cÃ¼zdanÄ± oluÅŸturur.
     * EÄŸer kullanÄ±cÄ± zaten varsa, bakiye deÄŸiÅŸtirilmez.
     *
     * @param user KullanÄ±cÄ± adÄ±
     */
    public static void createWallet(String user) {
        // Yeni kullanÄ±cÄ±ya varsayÄ±lan olarak 100 birim bakiyesi olsun
        balances.putIfAbsent(user, 100.0);
    }


    /**
     * Ä°ki kullanÄ±cÄ± arasÄ±nda transfer gerÃ§ekleÅŸtirir.
     * GÃ¶nderenin yeterli bakiyesi varsa iÅŸlem yapÄ±lÄ±r.
     *
     * @param from   GÃ¶nderen kullanÄ±cÄ±
     * @param to     AlÄ±cÄ± kullanÄ±cÄ±
     * @param amount Transfer miktarÄ±
     * @return Ä°ÅŸlem baÅŸarÄ±lÄ±ysa true, aksi halde false
     */
    public static boolean transfer(String from, String to, double amount) {
        if (balances.getOrDefault(from, 0.0) >= amount) {
            balances.put(from, balances.get(from) - amount);
            balances.put(to, balances.getOrDefault(to, 0.0) + amount);
            return true;
        }
        return false;
    }


    /**
     * TÃ¼m kullanÄ±cÄ±larÄ±n gÃ¼ncel bakiyelerini dÃ¶ner.
     * @return KullanÄ±cÄ±-bakiye eÅŸlemeleri
     */
    public static Map<String, Double> getBalances(){
        return balances;
    }

} // end _05_Wallet
